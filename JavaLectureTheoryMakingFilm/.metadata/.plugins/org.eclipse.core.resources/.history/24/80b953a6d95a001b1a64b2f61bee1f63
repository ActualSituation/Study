package lec09.ex03.e;

import javafx.application.Application;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.geometry.Insets;
import javafx.geometry.Orientation;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.scene.control.TextArea;
import javafx.scene.control.Alert.AlertType;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.FlowPane;
import javafx.stage.Stage;

public class MainView extends Application {

	@Override
	public void start(Stage primaryStage) throws Exception {
		
		BorderPane root = new BorderPane();
		
		TableView<ProductVo> tableView = new TableView<ProductVo>();
		root.setCenter(tableView);
		
		TableColumn<ProductVo, String> tc1 =
				new TableColumn<ProductVo, String>("품목번호");
		TableColumn<ProductVo, String> tc2 = 
				new TableColumn<ProductVo, String>("품목명");
		TableColumn<ProductVo, Integer> tc3 = 
				new TableColumn<ProductVo, Integer>("단가");
		tableView.getColumns().setAll(tc1, tc2, tc3);
		
		tc1.setCellValueFactory(new PropertyValueFactory<ProductVo, String>("productNo"));
		tc2.setCellValueFactory(new PropertyValueFactory<ProductVo, String>("productName"));
		tc3.setCellValueFactory(new PropertyValueFactory<ProductVo, Integer>("price"));
		
		tc1.setStyle("-fx-alignment:CENTER");
		tc2.setStyle("-fx-alignment:CENTER-LEFT");
		tc3.setStyle("-fx-alignment:CENTER-RIGHT");
		
		tc1.prefWidthProperty().bind(tableView.widthProperty().multiply(0.2));
		tc2.prefWidthProperty().bind(tableView.widthProperty().multiply(0.5));
		tc3.prefWidthProperty().bind(tableView.widthProperty().multiply(0.3));
		
		FlowPane pane = new FlowPane(Orientation.VERTICAL);
		pane.setPadding(new Insets(10));
		pane.setVgap(10);
		pane.setPrefSize(100, 100);
		pane.setMinWidth(150);
		root.setRight(pane);
		
		Button btn1 = new Button("자료등록");
		Button btn2 = new Button("자료추가");
		Button btn3 = new Button("자료삭제");
		Button btn4 = new Button("자료선택(셀선택)");
		Button btn5 = new Button("자료선택(행선택)");
		
		btn1.prefWidthProperty().bind(pane.widthProperty().subtract(20));
		btn2.prefWidthProperty().bind(pane.widthProperty().subtract(20));
		btn3.prefWidthProperty().bind(pane.widthProperty().subtract(20));
		btn4.prefWidthProperty().bind(pane.widthProperty().subtract(20));
		btn5.prefWidthProperty().bind(pane.widthProperty().subtract(20));
		
		BorderPane pane2 = new BorderPane();
		pane2.setPadding(new Insets(10));
		root.setBottom(pane2);
		
		TextArea textArea = new TextArea();
		textArea.setPrefHeight(60);
		pane2.setCenter(textArea);
		
		btn1.setOnAction(new EventHandler<ActionEvent>() {
			@Override
			public void handle(ActionEvent event) {
				ProductVo v1 = new ProductVo("a001", "아메리카노", 4000);
				ProductVo v2 = new ProductVo("a002", "카페라떼", 4300);
				ProductVo v3 = new ProductVo("a003", "카페모카", 4500);
				ObservableList<ProductVo> list =
						FXCollections.observableArrayList(v1, v2, v3);
				tableView.setItems(list);
			}
		});
		
		btn2.setOnAction(new EventHandler<ActionEvent>() {
			@Override
			public void handle(ActionEvent event) {
				ProductVo v1 = new ProductVo("a004", "아이스티", 4000);
				tableView.getItems().add(v1);
			}
		});
		
		btn3.setOnAction(new EventHandler<ActionEvent>() {
			@Override
			public void handle(ActionEvent event) {
				
				int selectedIndex = tableView.getSelectionModel().getSelectedIndex();
				if (selectedIndex >= 0) {
					tableView.getItems().remove(selectedIndex);
				} else {
					String msg = "삭제할 데이터를 선택 후 실행하시기 바랍니다.";
					Alert alert = new Alert(AlertType.INFORMATION, msg);
					alert.setHeaderText("자료 삭제 안내");
					alert.show();
				}
				
			}
		});
		
		btn4.setOnAction(new EventHandler<ActionEvent>() {
			@Override
			public void handle(ActionEvent event) {
				
				tableView.getSelectionModel().setCellSelectionEnabled(true);
				ObservableList<TableColumn<ProductVo, ?>> columns = 
						tableView.getColumns();
				if (columns.size() > 0 && tableView.getItems().size() > 0) {
					TableColumn<ProductVo, ?> tableColumn = tableView.getColumns().get(0);
					tableView.getSelectionModel().select(0, tableColumn);
				}
				
			}
		});
		
	}

}
