package ver2_lect05.networking06;

public class NetworkingDesc {

    /**
     * 네트워크라는 말은 다들 아실 것이라고 생각합니다.
     * 네트워크를 구축했다, 네트워크를 가지고 있다.
     * 다들 이렇게 말하죠.
     * 이 말은 결국 뭔가 연결을 맺고 서로 통하고 있다는 뜻하고 같습니다.
     *
     * 네트워킹이란 쉽게 이해해서 유선, 또는 무선 통신으로 컴퓨터와 컴퓨터 사이,
     * 또는 컴퓨터와 장치 사이에 서로 연결을 맺고 자료를 주고받는 것이라고 보시면 됩니다.
     *
     * 우리가 네트워크를 통해서 하는 일에는 무엇이 있을까요?
     * 구글이나 네이버, 다음, 네이트 등에서 검색하는 일,
     * 카카오톡이나 페이스북 메신저로 메시지를 주고받는 일,
     * 여러 명이서 동시에 게임에 접속하여 게임을 즐기는 일,
     * 이메일을 주고 받는 일,
     * 이런 일들이 모두 네트워크로 연결되어 한다고 보시면 됩니다.
     *
     * 결국 네트워크라는 것은 내가 쓰고 있는 컴퓨터로 원격으로 다른 무언가를 조정하거나,
     * 자료를 주고받는 모든 활동이라고 보시면 되요.
     *
     * 번외로, 저는 추측하건데 iot와 빅 데이터, 클라우드, 모바일, 웹 등이 발전하면 할수록
     * 통신사는 어깨춤을 절로 추지 않을까 싶습니다.
     * 데이터 무제한 요금제를 한다고 하더라도,
     * 일단 통신이 연결되어 있어야 그런 모든 서비스를 사용할 수 있거든요.
     * 개인 사용자에게는 데이터 무제한으로 푼다고 하더라도
     * 소수의 몇몇 사용자만 대용량 데이터를 사용하고 대부분은 사용량이 비슷할 겁니다.
     * 그리고 기업 사용자에게는 용량별 과금 체계를 갖출 수도 있는 것이겠죠.
     *
     * 대규모 iot 시스템을 구축한 공장에서는 대용량으로 쓰면 쓸수록 저렴해 지는 요금 체계를 제시할 것이고
     * 소규모지만 iot 시스템을 구축한 공장에서는 최대한 알뜰하게 쓸 수 있는 맞춤형 요금 체계를 제시하겠죠.
     * 일단 통신사는 처음에 인프라만 잘 구축해 놓으면,
     * 유지보수만 함으로써 계속 매출을 올릴 수 있으니까요.
     *
     * 그리고 현재 5g가 일반 사용자들에게 다가와서 구축되고 있는 세상이죠.
     * 그런데 기술의 세계에서는 벌써 6g 패권 다툼에 돌입했다고 합니다.
     * 5g에 들어오면서 클라우드, iot 등이 더욱 각광받는데는 이유가 있어요.
     * 4g와 5g 사이에는 동시에 접속 가능한 수와 통신의 속도, 그리고 통신이 처리되는데
     * 잠시 머뭇거리는 정도라 할 수 있는 지연률 등에 있어서 엄청난 차이를 보이거든요.
     * 통신의 속도만 올라간 게 아니라, 지연률도 굉장히 짧아지고, 동시에 붙을 수 있는
     * 기기의 숫자도 많이 늘어난 거죠.
     * 그것을 통해서 iot가 실제 구현 가능한 기술이 된 것입니다.
     * 특히 공장이나 이런 대규모로 필요한 곳에서요.
     * iot의 발전을 무엇을 불러왔을까요?
     * 바로 스마트시티와 스마트팩토리의 고도화를 불러 왔습니다.
     * 스마트시티를 통해서 에너지 효율, 치안, 재난재해 예방 등 다양한 것들을
     * 서비스로 제공할 수 있습니다.
     * 스마트팩토리는 불량률 감소, 생산량 증대 등의 효과를 불러올 수 있죠.
     * 대표적으로 드는 두 가지라고 할 수 있습니다.
     * 4g에서 5g로의 무선 통신의 발달은 이런 개념들을 가속화시켰습니다.
     * 그렇다면 또 한 번의 세대가 바뀌는 6g에서는 어떤 세상이 펼쳐질까요?
     * 3g에서 4g로 넘어오면서 많이 바뀌었고,
     * 4g에서 5g로 넘어가면서 세상은 또 한 번 바뀌었습니다.
     * 그리고 각국은, 기사에서 본 건데 2030년을 목표로 6g 패권 경쟁에 돌입했다고 합니다.
     * 2030년이 되면 또 어떤 ICT 신기술이 우리에게 등장할지 모릅니다.
     *
     * 이런 모든 것들이 무엇일까요?
     * 결국 네트워크입니다.
     * 그래서 앞서서 통신사들은 계속 흐뭇해지지 않을까, 그리 말씀 드린 겁니다.
     * 젊은 분들은 모르시겠지만, 예전에 통신사는 공기업이었던 걸로 기억하거든요.
     * 그때가 저도 어릴 적이어서요.
     * 근데 지금은 대표적인 세 개의 통신사로 민영화가 되었죠.
     * 하지만 민영화가 되었어도 이런 기간 산업에 해당하는 곳들은 국가의 통제를 강하게 받습니다.
     * 대표적인 곳 중 하나가 도시가스예요.
     * 도시가스도 도시가스업체들은 민영업체이지만,
     * 이 민영업체들의 실질적인 통제 권한을 쥔 곳은 국가에서 통제하고 있는 공기업이예요.
     * 저의 경력 중에 도시가스 업체에 SW를 공급하는 곳이 있다고 했죠?
     * 거기서 일하면서 스스로 도메인 지식을 찾다가 알게 된 것이,
     * 한국가스공사는 도시가스업체에 가스를 공급해 줍니다.
     * 근데 이때 가스 공급 단가로 도시가스 업체들을 통제하는 역할을 하더군요.
     * 국가에서 도시가스 업체에 지정한 1년에 어느 비율로 시설, 전산 등에 투자하라는
     * 의무 비율이 있어요.
     * 얼마를 벌었으면 그 중 얼마는 꼭 매설된 가스관이나 회사 시설이나 가스 관련 시설이나,
     * 아니면 전산이나 이런 곳에 투자하라고 지정되어 있죠.
     * 만약에 회사가 투자를 적게 하고 이윤을 더 남기면, 그건 회계에 남아요.
     * 그리고 가스공사는 우리가 정한 룰을 안 지켰으니 너희에게 공급하는 가스 단가를 올리겠다,
     * 이렇게 나오죠.
     * 결국 남겨도 다시 가스공사가 회수해 가는 체계로 되어 있어요.
     * 그리고 가스공사가 가스를 대량으로 매입함으로써 에너지를 좀 더 싸게 수입하고,
     * 공급단가를 조절함으로써 실질적으로 소비자들에게 공급되는 가스 단가를 조절하는 거죠.
     * 그를 통해서 국민들의 실생활과 밀접한 관련이 있는 도시가스 요금을
     * 잘 통제하는 것입니다.
     * 한때 가스 수입을 각 업체들이 알아서 하자고 이야기가 나왔던 것으로 알고 있어요.
     * 그게 어떻게 진행되었는지는 모르겠어요.
     * 근데 일하다 보면 느끼게 되는 것은,
     * 우리나라는 기간 산업에 해당되는 곳들에는 국가와 정부의 그림자를 어느 정도 느낄 수 있습니다.
     * 발전소라든지, 수처리시설이라든지, 이런 곳들도 그래요.
     *
     * 이야기가 또 다른데로 샜네요.
     *
     * 네트워크는 이런 거예요.
     * 네트워크의 방법에는 이런 것들이 있습니다.
     * 클라이언트와 서버라는 개념이 존재해요.
     * 클라이언트들은 네트워크를 통해서 서버에 접속하여 클라이언트들끼리 서로 자료와 정보를 주고받죠.
     * 자료와 정보는 약간 개념이 다른 것인데,
     * 자료는 무작위로 생성되는 어떤 사실이라고 보시면 되요.
     * 그리고 정보는 이 자료들을 가져와서 의도에 맞게 가공된 어떤 사실, 또는 지식이라고 보면 되구요.
     * 의도가 불순한 의도여서는 안 되고, 사실에 입각한, 정보를 제공받는 이들에게 이득을 줄 수 있는
     * 무언가를 제공하기 위해 자료를 가공하여 정보로 만드는 것이죠.
     * 국가를 운영하는 곳에서는 국가를 위해서,
     * 기업을 운영하는 곳에서는 기업을 위해서
     * 정보를 다루는 곳들은 자료를 가공하여 정보를 제공하죠.
     *
     * 보통 웹 개발자로 일하게 되면 정보시스템을 만드는 일들을 많이 합니다.
     * 이때 정확한 자료와 정보를 표현하는 정보시스템을 만드는 것이 무척 중요한 능력 중 하나로 여겨지게 됩니다.
     *
     * 클라이언트들이 서버에 접속할 때는 아이피와 포트를 사용합니다.
     *
     * 외부에서 인터넷을 통해서 서버까지 찾아가는데는 아이피 주소를 사용해서 접근이 가능해요.
     * 그리고 서버까지 접근하면 사용하려는 서버 프로그램에 접근할 때는 해당 포트를 찾아서 접근하구요.
     *
     * 아이피가 거대한 마트의 주차장이라고 하면
     * 포트는 각 차를 댈 수 있는 주차선이 그려진 공간이라고 보면 되요.
     *
     * 항구로도 예를 들 수 있겠네요.
     * 항구에는 각각 배가 접안할 수 있는 곳들이 있죠.
     * 이때 각각 접안이 가능한 부두들이 포트라고 생각하시면 되고,
     * 이 부두들의 집합이 아이피라고 보시면 되요.
     *
     * 포트에서 서버 프로그램으로 접근하는데는 소켓이 사용되요.
     * 포트에 접근하고, 그리고 포트에서 서버 프로그램으로 접근하는데는 포트를 사용하죠.
     * 결국 소켓은 클라이언트와 서버를 서로 연결해 주는 것이죠.
     * 이 포트, 그리고 소켓을 통해서 양방향 통신이 이루어지는 것입니다.
     *
     * [프로그램] <> [소켓] <> [포트] <> [IP] <> 인터넷 <> [IP] <> [포트] <> [소켓] <> [프로그램]
     *
     * 이런 구조로 이루어져 있어요.
     *
     * 통신방식에는 TCP/IP 통신과 UDP 통신이 있어요.
     * TCP/IP는 그 내용을 다루는 것만으로도 두꺼운 책이 있을 정도죠.
     * 저는 입문에 맞게 설명을 드리자면,
     * TCP/IP는 패킷 검증을 해요.
     * UDP는 패킷 검증을 안 하죠.
     * 그래서 TCP/IP는 신뢰성이 높고 검증을 하는 대신에 속도가 느리다는 단점이 있습니다.
     * 그리고 오류가 발생하면 재요청을 하고 네트워크 부하가 있다는 점이 있습니다.
     * 하지만 거의 다 통신을 TCP/IP로 처리하는 편이죠.
     * 이유는 네트워크에서 정말 중요한 것, 그리고 프로그램에서 정말 중요한 것은
     * 바로 신뢰입니다.
     * 프로그램이 높은 가치를 받을 수 있는 것 중 하나가 바로 신뢰도가 높다는 것이죠.
     *
     * 그럼 설명은 이 정도로 하고 이제 실습에 들어가겠습니다.
     *
     * 다음 강의에서 뵙겠습니다.
     */

}
