package lec01;

/**
 * 두 번째
 * 변수
 */
public class Variable02 {

    public static void main(String[] args) {
        /**
         * 변수란 무엇일까요?
         * 보통 변수는 단 하나의 값을 저장할 수 있는 메모리 공간이라고 표현할 수 있습니다.
         * 사실 깊게 들어가면 프로그래밍은 컴퓨터의 기계적인 자원을 사용하여,
         * 빠르게 연산을 하면서 어떤 기능을 수행하는 것입니다.
         * 사람이 1시간이 걸릴 계산을 빠르게 1초만에 끝내곤 하는 기능들을 수행하는 것이죠.
         * 그리고 그런 기능들을 수행하기 위해서는
         * 프로그램을 짜야 하고,
         * 그런 프로그램을 짜기 위해서는
         * 변수를 선언해서 변수에 값을 지정해 주고,
         * 해당 값들을 사용해서 프로그램을 이것저것 짜는 것입니다.
         */

        int intAmount = 10;

        /**
         * 위의 코드가 보이시나요? 해당 코드에서 int intAmount = 10;이라고 할 때
         * 보통 intAmount를 변수명이라고 합니다.
         * int intAmount를 합쳐서 변수라고 할 수 있죠.
         * 이것이 변수입니다.
         * 그리고 int intAmount = 10; 은 변수를 사용하기 전에 처음으로 값을 지정하기 위해
         * 초기화라는 작업을 수행합니다.
         * 즉 int intAmount = 10;이라고 하면 10이라는 값으로 초기화를 하는 것이죠.
         * 최초의 값을 10으로 셋팅하는 것입니다.
         * 보통 int intAmount = 0; 이라 하면 0이라는 값으로 최초의 값을 셋팅하는 것이구요.
         * 이것을 변수의 초기화라고 합니다.
         *
         * 프로그래밍을 하다 보면 변수의 초기화는 중요한 것이 됩니다.
         * 왜냐면 초기화를 해야지만 최초 값을 셋팅하고 정확한 값을 지정하여,
         * 해당 값을 사용하여 프로그래밍을 진행해 나가기 때문입니다.
         * 만약 변수의 초기화를 안 한다면 어떤 문제가 발생할까요?
         * 알 수 없는 값으로부터 명령들이 실행되어져 가고 변수들의 값들이
         * 변경되는 현상이 발생하게 됩니다.
         *
         * 즉 10 + 2 의 값은? 했는데 12가 안 나오고 15나 0 등의 이상한 값이
         * 나올 확률이 생기게 됩니다.
         *
         * 그렇기 때문에 변수의 초기화를 통해 값을 제대로 지정해 주는 작업은 중요합니다.
         * 다만 이것은 사람마다 의견이 갈릴 수 있는 부분일 수도 있습니다.
         * 하지만 저 같은 경우는
         * int a = 0; 이런 식으로 변수의 값을 제대로 초기화 해주는 것을
         * 매우 중요시 여깁니다.
         *
         * 변수를 활용하여 코드 내에서 값들을 저장하고 활용합니다.
         * 간단한 예를 들어 보이도록 하겠습니다.
         */

        int firstValue = 10;
        int secondValue = 2;;
        int sumValue = 0;

        /**
         * 세 가지의 변수가 선언되었습니다.
         * 그리고 계산을 진행합니다.
         */

        sumValue = firstValue + secondValue;
        System.out.println("합계 : " + sumValue);

        /**
         * 간단한 변수의 활용 예입니다.
         * 저런 방식을 활용하여 10 더하기 2를 한 뒤 해당 값을 sumValue라는 변수에 담는 것입니다.
         * 그리고 sumValue를 System.out.println이라는 메서드를 사용해서 콘솔창에 출력해 보는 것입니다.
         * 이것이 변수의 활용법입니다.
         *
         * 더 부연 설명을 하자면 int라는 것은 정수형 값을 담을 수 있게 변수의 타입을 지정해 주는 것입니다.
         * 1, 2, 3, 4, 5 등의 값을 정수형이라고 할 수 있습니다.
         * 이런 값들을 담아서 활용하는 것입니다.
         * 그리고 그런 값들을 활용하여 단순한 더하기 작업을 수행한 것입니다.
         * 실제 프로그래밍에 들어가면 이런 단순한 더하기 작업을 할 수도,
         * 엄청 복잡한 단계를 거치는 명령 순서를 짤 수도 있습니다.
         * 보통 명령 순서, 연산 순서 등을 짜는 것을 알고리즘이라고 표현하죠.
         * 그리고 복잡한 기능을 수행하기 위해서,
         * 보통 사용자는 단순한 동작만 하고 그 단순한 동작으로 여러 가지 동작을 수행하고 명령을 처리하는 것을
         * 짜는데는 자료구조와 알고리즘 지식이 필요하게 됩니다.
         * 특히나 알고리즘 지식이 많이 필요합니다.
         * 또한 자료구조는 왜 중요하냐면 자료구조를 잘 알아야만 효율적인 알고리즘을 짤 수 있기 때문입니다.
         * 자료구조는 무엇이냐 하면 자료를 효율적으로 저장하고 처리하기 위한 구조라고 생각하시면 됩니다.
         * 더 정확히는 자료를 어떤 형태로 저장하느냐의 이야기이죠.
         * 1, 2, 3, 4, 5, 6, 7 이런 식으로 자료를 나열해서 저장하고 하나씩 뽑아 쓴다든가,
         * dong : 101, ho : 203, floor : 2 이런 식의 key : value 형태로 자료를 저장한다든가 등의
         * 다양한 형태가 존재하게 됩니다.
         *
         * 변수를 설명하다가 너무 옆으로 빠지게 되었네요.
         *
         * 즉 변수는 이런 식으로 활용하게 됩니다.
         *
         * 변수에는 명명규칙이 있습니다.
         * 변수명, 식별자를 지을 때는 서로 구분되는 값으로 지어야 합니다.
         *
         * 1. 대소문자 구분되며 길이의 제한이 없어야 하며
         * 2. 예약어를 사용하면 안 되며
         * 3. 숫자로 시작하면 안 되고
         * 4. 특수문자는 '_'와 '$'만 허용합니다.
         *
         * 어렵죠?
         *
         * 변수명을 지으실 때는 이 규칙을 생각하시길 바랍니다.
         *
         * 은행계좌
         * 라는 변수명을 짓는다면
\        */

        String bankAccount = "101-10101-10101";

        /**
         * 이런 식으로 짓는 것이 좋습니다. 낙타등표기법이라고 합니다.
         * 은행, bank. 계좌, account. 은행계좌, bankAccount라고 합니다.
         * 두 개를 합쳐서 짓지요.
         * 그리고 낙타등표기법이라고 표현합니다.
         * bankAccount라고 하죠.
         * 낙타등표기법을 왜 사용할까요?
         * bankaccount 이렇게 변수명을 명명하면 한 눈에 알아보기가 쉽지 않습니다.
         * bankAccount라고 지으면 바로 알아볼 수 있습니다.
         * A, 대문자를 활용함으로써 보기 매우 쉽죠.
         * 다른 예들을 들어볼까요?
         */

        int depositMoney = 1000000;

        /**
         * 예금금액, 잔고 등 다양하죠.
         */

        int fruitListSize = 10;

        /**
         * 과일 목록 길이라고 변수명을 표현할 수 있죠.
         */

        String nameList = "강남콩, 포도, 현미";

        /**
         * 이름 목록이라고 할 수 있습니다.
         * 이런 식으로 변수명을 명명하는 것이 좋습니다.
         * 위의 복잡한 규칙들을 알고 있는 것도 좋지만,
         * 변수명을 지을 때는 이런 식으로 낙타등표기법을 사용하여
         * 이름을 짓는 것이 좋습니다.
         * 이 규칙 하나만 알고 있어도 많은 제한 조건을 피할 수 있습니다.
         * 예약어를 회피하라고 되어 있는데
         * 예약어에는
         * abstract, default, package 등이 있습니다.
         * 이런 것들을 회피하는 것이 좋습니다.
         * 하지만 낙타등표기법을 사용하시면 이런 것을 피하실 수 있습니다.
         * 그리고 프로그래밍을 자주 연습해 보시다 보면은
         * 어떤 변수명이 허용되지 않는지를 자연스럽게 습득하게 됩니다.
         * 이게 무슨 의미냐면은 이클립스, 인텔리제이 등을 통해서
         * 변수명을 명명하다 보면은 허용되지 않는 변수명들은 에레 표시로 표현해 주기 때문입니다.
         *
         * 변수에 대한 설명은 여기까지 하도록 하겠습니다.
         */

    }

}
